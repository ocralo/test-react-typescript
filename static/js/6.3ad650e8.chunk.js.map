{"version":3,"sources":["Components/CardCandidate/index.tsx","views/Voting-list/index.tsx"],"names":["CardCandidate","props","className","candidate","firstname","lastname","age","slogan","votes","onClick","e","functionAddVote","idCard","functionDeleteVote","VotingList","useState","candidates","setCandidates","addVote","i","auxCandidates","sort","a","b","deleteVote","useEffect","arrayCandidates","index","aux","faker","firstName","lastName","Math","floor","random","catchPhraseDescriptor","push","generateCandidate","match","params","console","log","map","data","key"],"mappings":"kPAuDeA,MAlDf,SAAuBC,GACrB,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,iBACb,0CACA,qCAAOD,EAAME,UAAUC,UAAvB,YAAoCH,EAAME,UAAUE,WACpD,2BAAIJ,EAAME,UAAUG,KACpB,2BAAIL,EAAME,UAAUI,SAEtB,yBAAKL,UAAU,kBACb,sCAAYD,EAAME,UAAUK,OAC5B,6BACE,4BACEN,UAAU,cACVO,QAAS,SAAAC,GACPT,EAAMU,gBAAgBV,EAAMW,UAHhC,KAQA,4BACEV,UAAU,cACVO,QAAS,SAAAC,GACPT,EAAMY,mBAAmBZ,EAAMW,UAHnC,S,QC2EKE,UA1Ef,SAAoBb,GAAwB,IAAD,EACLc,qBADK,mBAClCC,EADkC,KACtBC,EADsB,KAIzC,SAASC,EAAQC,GACf,GAAIH,EAAY,CACd,IAAII,EAAa,YAAOJ,GACpBI,EAAcD,GAAGX,MAAQ,IAAIY,EAAcD,GAAGX,QAClDS,EACEG,EAAcC,MAAK,SAACC,EAAgBC,GAClC,OAAOA,EAAEf,MAAQc,EAAEd,WAM3B,SAASgB,EAAWL,GAClB,GAAIH,EAAY,CACd,IAAII,EAAa,YAAOJ,GACpBI,EAAcD,GAAGX,MAAQ,GAAGY,EAAcD,GAAGX,QACjDS,EACEG,EAAcC,MAAK,SAACC,EAAgBC,GAClC,OAAOA,EAAEf,MAAQc,EAAEd,WAe3B,OARAiB,qBAAU,WACRR,EA/CJ,SAA2BE,GAGzB,IAFA,IAAIO,EAAsC,GAEjCC,EAAQ,EAAGA,EAAQR,EAAGQ,IAAS,CACtC,IAAIC,EAAmB,CACrBxB,UAAWyB,OAAWC,YACtBzB,SAAUwB,OAAWE,WACrBzB,IAAK0B,KAAKC,MAAM,GAAAD,KAAKE,SAAuB,IAC5C3B,OAAQsB,UAAcM,wBACtB3B,MAAOwB,KAAKC,MAAM,GAAAD,KAAKE,SAAsB,IAG/CR,EAAgBU,KAAKR,GAEvB,OAAOF,EAiCSW,EAAmBpC,EAAMqC,MAAMC,OAAOvB,eACnD,CAACf,EAAMqC,MAAMC,OAAOvB,aAEvBS,qBAAU,WACRe,QAAQC,IAAI,YACX,CAACzB,IAGF,6BACGA,GACCA,EACGK,MAAK,SAACC,EAAgBC,GACrB,OAAOA,EAAEf,MAAQc,EAAEd,SAEpBkC,KAAI,SAACC,EAAmBxB,GACvB,OACE,kBAAC,EAAD,CACEyB,IAAKzB,EACLP,OAAQO,EACRhB,UAAWwC,EACXhC,gBAAiBO,EACjBL,mBAAoBW","file":"static/js/6.3ad650e8.chunk.js","sourcesContent":["//Se importan las librerias necesarias\nimport React from \"react\";\n\nimport \"./style.css\";\n\nfunction CardCandidate(props: IProps) {\n  return (\n    <div className=\"card-candidate\">\n      <div className=\"col-card-left\">\n        <h2>Candidato:</h2>\n        <p>{`${props.candidate.firstname} ${props.candidate.lastname}`}</p>\n        <p>{props.candidate.age}</p>\n        <p>{props.candidate.slogan}</p>\n      </div>\n      <div className=\"col-card-right\">\n        <h2>Votos: {props.candidate.votes}</h2>\n        <div>\n          <button\n            className=\"unit button\"\n            onClick={e => {\n              props.functionAddVote(props.idCard);\n            }}\n          >\n            +\n          </button>\n          <button\n            className=\"unit button\"\n            onClick={e => {\n              props.functionDeleteVote(props.idCard);\n            }}\n          >\n            -\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface ICandidates {\n  firstname: string;\n  lastname: string;\n  age: number;\n  slogan: string;\n  votes: number;\n}\n\ninterface IProps{\n    candidate: ICandidates,\n    functionAddVote: Function,\n    functionDeleteVote: Function,\n    idCard:number\n}\n\n//Se exporta el componente\nexport default CardCandidate;\n","//Se importan las librerias necesarias\nimport React, { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport * as faker from \"faker\";\n//se importan los componentes\nimport CardCandidate from \"../../Components/CardCandidate\";\nimport \"./style.css\";\n\n/* funcion que se encargara de generar el total de candidatos que se coloque en el query */\nfunction generateCandidate(i: number) {\n  let arrayCandidates: Array<ICandidates> = [];\n\n  for (let index = 0; index < i; index++) {\n    let aux: ICandidates = {\n      firstname: faker.name.firstName(),\n      lastname: faker.name.lastName(),\n      age: Math.floor(Math.random() * (80 - 18) + 18),\n      slogan: faker.company.catchPhraseDescriptor(),\n      votes: Math.floor(Math.random() * (20 - 0) + 0)\n    };\n\n    arrayCandidates.push(aux);\n  }\n  return arrayCandidates;\n}\n\nfunction VotingList(props: ComponentProps) {\n  const [candidates, setCandidates] = useState<ICandidates[]>();\n\n  /* Funcion, para a√±adir votos a los candidatos y que no pase de un maximo de 20 votos*/\n  function addVote(i: number) {\n    if (candidates) {\n      let auxCandidates = [...candidates];\n      if (auxCandidates[i].votes < 20) auxCandidates[i].votes++;\n      setCandidates(\n        auxCandidates.sort((a: ICandidates, b: ICandidates) => {\n          return b.votes - a.votes;\n        })\n      );\n    }\n  }\n  /* Funcion, para quitar votos a los candidatos y que no pase de un minimo de 0 votos*/\n  function deleteVote(i: number) {\n    if (candidates) {\n      let auxCandidates = [...candidates];\n      if (auxCandidates[i].votes > 0) auxCandidates[i].votes--;\n      setCandidates(\n        auxCandidates.sort((a: ICandidates, b: ICandidates) => {\n          return b.votes - a.votes;\n        })\n      );\n    }\n  }\n\n  //rellena los candidatos, cada vez que inicia la aplicacion o que cambie el dato props.match.params.candidates\n  useEffect(() => {\n    setCandidates(generateCandidate(+props.match.params.candidates));\n  }, [props.match.params.candidates]);\n\n  useEffect(() => {\n    console.log(\"cambio\");\n  }, [candidates]);\n\n  return (\n    <div>\n      {candidates &&\n        candidates\n          .sort((a: ICandidates, b: ICandidates) => {\n            return b.votes - a.votes;\n          })\n          .map((data: ICandidates, i: number) => {\n            return (\n              <CardCandidate\n                key={i}\n                idCard={i}\n                candidate={data}\n                functionAddVote={addVote}\n                functionDeleteVote={deleteVote}\n              />\n            );\n          })}\n    </div>\n  );\n}\n\ninterface ICandidates {\n  firstname: string;\n  lastname: string;\n  age: number;\n  slogan: string;\n  votes: number;\n}\n\ninterface RouteInfo {\n  candidates: string;\n}\n\ninterface ComponentProps extends RouteComponentProps<RouteInfo> {}\n\n//Se exporta el componente\nexport default VotingList;\n"],"sourceRoot":""}