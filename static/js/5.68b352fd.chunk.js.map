{"version":3,"sources":["Components/TextInput/index.tsx","Components/FocusableTextInput/index.tsx","views/focusable-input/index.tsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["TextInput","props","className","type","placeholder","onFocus","e","propSetFocused","onBlur","FocusableTextInput","useState","focused","setFocused","onSubmit","preventDefault","focusableInput","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError"],"mappings":"8LAsBeA,MAlBf,SAAmBC,GACjB,OACE,2BACEC,UAAU,iBACVC,KAAK,OACLC,YAAY,MACZC,QAAS,SAAAC,GAAIL,EAAMM,gBAAe,IAClCC,OAAQ,SAAAF,GAAIL,EAAMM,gBAAe,OCiBxBE,MArBf,WAA+B,IAAD,EACEC,oBAAkB,GADpB,mBACrBC,EADqB,KACZC,EADY,KAG5B,OACE,0BACEV,UAAU,yBACVW,SAAU,SAAAP,GACRA,EAAEQ,mBAGJ,kBAAC,EAAD,CAAWP,eAAgBK,KACd,IAAZD,EACC,wBAAIT,UAAU,uBAAd,0BAEA,wBAAIA,UAAU,wBAAd,yBCLOa,UATf,WACE,OACE,6BAASb,UAAU,aACjB,kBAAC,EAAD,S,gCCPS,SAASc,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC","file":"static/js/5.68b352fd.chunk.js","sourcesContent":["//Se importan las librerias necesarias\nimport React from \"react\";\nimport \"./style.css\";\n\nfunction TextInput(props: IProps) {\n  return (\n    <input\n      className=\"inputFocusable\"\n      type=\"text\"\n      placeholder=\"...\"\n      onFocus={e=>{props.propSetFocused(true)}}\n      onBlur={e=>{props.propSetFocused(false)}}\n    />\n  );\n}\n\ninterface IProps{\n  focused?: boolean;\n  propSetFocused: (value: boolean | ((prevVar: boolean) => boolean)) => void;\n  /* propSetFocused: (value: boolean | ((prevVar: boolean) => boolean)) => void; */\n}\n//Se exporta el componente\nexport default TextInput;\n","//Se importan las librerias necesarias\nimport React, { useState } from \"react\";\n//se importan los estilos\nimport \"./style.css\";\n//Se importan los componentes necesarios\nimport TextInput from \"../../Components/TextInput\";\n\nfunction FocusableTextInput() {\n  const [focused, setFocused] = useState<boolean>(false);\n\n  return (\n    <form\n      className=\"formFocusableTextInput\"\n      onSubmit={e => {\n        e.preventDefault();\n      }}\n    >\n      <TextInput propSetFocused={setFocused} />\n      {focused !== true ? (\n        <h1 className=\"stateInput reedText\">No esta focus el input</h1>\n      ) : (\n        <h1 className=\"stateInput greenText\">Esta focus el input</h1>\n      )}\n    </form>\n  );\n}\n\n//Se exporta el componente\nexport default FocusableTextInput;\n","//Se importan las librerias necesarias\nimport React from \"react\";\n//se importan los estilos\nimport \"./style.css\";\n//Se importan los componentes\nimport FocusableTextInput from \"../../Components/FocusableTextInput\";\n\nfunction focusableInput() {\n  return (\n    <section className=\"viewTest1\">\n      <FocusableTextInput />\n    </section>\n  );\n}\n\n//Se exporta el componente\nexport default focusableInput;\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}"],"sourceRoot":""}